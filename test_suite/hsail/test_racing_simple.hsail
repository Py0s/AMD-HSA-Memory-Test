
module &m:1:0:$full:$large:$default;

decl prog function &abort()();

prog kernel &__test_racing_simple_kernel(
	kernarg_u64 %in,
	kernarg_u64 %out)
{
	workitemabsid_u32		$s0, 0;						// get work item id
	cvt_s64_s32	$d0, $s0;									// convert 32 to 64

	ld_kernarg_align(8)_width(all)_u64	$d1, [%in];		// load addr in
	ld_kernarg_align(8)_width(all)_u64	$d2, [%out];	// load address of out in d1

	cmp_eq_b1_u32				$c0, $s0, 0;			// compare if id equal zero
	cbr_b1							$c0, @ZERO;				// go to label if true

	cmp_eq_b1_u32				$c0, $s0, 1;			// compare if id equal one
	cbr_b1							$c0, @ONE;				// go to label

@END:
	ret;																	// Return if false

@ZERO:
	add_u64	$d3, $d1, 4;		// move sizeof int
	st_global_u32 1, [$d1]; // x = 1
	st_global_u32 1, [$d3]; // y = 1
	br @END;

@ONE:
	add_u64	$d3, $d1, 4;
	ld_global_u32 $s0, [$d3]; // r1 = y
	ld_global_u32 $s1, [$d1]; // r2 = x

	add_u64	$d3, $d2, 4;
	st_global_u32 $s0, [$d2];	// store in out
	st_global_u32	$s1, [$d3];
	br @END;
};
