		////////////////////////////////////////////////////////////////////////////////
//
// The University of Illinois/NCSA
// Open Source License (NCSA)
//
// Copyright (c) 2014-2015, Advanced Micro Devices, Inc. All rights reserved.
//
// Developed by:
//
//                 AMD Research and AMD HSA Software Development
//
//                 Advanced Micro Devices, Inc.
//
//                 www.amd.com
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to
// deal with the Software without restriction, including without limitation
// the rights to use, copy, modify, merge, publish, distribute, sublicense,
// and/or sell copies of the Software, and to permit persons to whom the
// Software is furnished to do so, subject to the following conditions:
//
//  - Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimers.
//  - Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimers in
//    the documentation and/or other materials provided with the distribution.
//  - Neither the names of Advanced Micro Devices, Inc,
//    nor the names of its contributors may be used to endorse or promote
//    products derived from this Software without specific prior written
//    permission.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
// THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
// OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS WITH THE SOFTWARE.
//
////////////////////////////////////////////////////////////////////////////////

module &m:1:0:$full:$large:$default;

decl prog function &abort()();

prog kernel &__test_racing_simple_kernel(
	kernarg_u64 %in,
	kernarg_u64 %out)
{
	workitemabsid_u32		$s0, 0;						// get work item id
	cvt_s64_s32	$d0, $s0;									// convert 32 to 64

	ld_kernarg_align(8)_width(all)_u64	$d1, [%in];		// load addr in
	ld_kernarg_align(8)_width(all)_u64	$d2, [%out];	// load address of out in d1

	cmp_eq_b1_u32				$c0, $s0, 0;			// compare if id equal zero
	cbr_b1							$c0, @ZERO;				// go to label if true

	cmp_eq_b1_u32				$c0, $s0, 1;			// compare if id equal one
	cbr_b1							$c0, @ONE;				// go to label

@END:
	ret;																	// Return if false

@ZERO:
	add_u64	$d3, $d1, 1;
	st_global_s8 1, [$d1]; // x = 1
	st_global_s8 1, [$d3]; // y = 1
	br @END;

@ONE:
	add_u64	$d3, $d1, 1;
	ld_global_s8 $s0, [$d3]; // r1 = y
	ld_global_s8 $s1, [$d1]; // r2 = x

	add_u64	$d3, $d2, 1;
	st_global_u8 $s0, [$d2];	// store in out
	st_global_u8	$s1, [$d3];
	br @END;
};
